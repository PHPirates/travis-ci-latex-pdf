name: pythontex-example
on: push

env:
  FILE: pythontex-example

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8.6
          architecture: x64
      - name: Set filename
        id: input_paths
        run: |
          echo ::set-output name=ROOT_FILE::$FILE.tex
          echo ::set-output name=WORKING_DIR::src
      - name: Compile
        uses: xu-cheng/latex-action@master
        with:
          root_file: ${{ steps.input_paths.outputs.ROOT_FILE }}
          working_directory: ${{ steps.input_paths.outputs.WORKING_DIR }}
          compiler: pdflatex
          pre_compile: tlmgr install pythontex
      - name: Run pythontex
        run: |
          cd src
          pythontex $FILE
      - name: Compile
        uses: xu-cheng/latex-action@master
        with:
          root_file: $FILE.tex
          working_directory: src
          compiler: pdflatex
      - name: Upload pdf
        uses: actions/upload-artifact@v2
        with:
          name: $FILE.zip
          path: src/*.pdf
      - name: Create Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Prepare output path and output name
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        id: prepare_metadata
        # upload-release-asset does not support wildcards or environment variables at the moment
        run: |
          echo ::set-output name=ARTIFACT_PATH::src/$FILE.pdf
          echo ::set-output name=ARTIFACT_NAME::$FILE.pdf
      - name: Upload Release Asset
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.prepare_metadata.outputs.ARTIFACT_PATH }}
          asset_name: ${{ steps.prepare_metadata.outputs.ARTIFACT_NAME }}
          asset_content_type: application/pdf